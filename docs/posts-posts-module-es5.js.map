{"version":3,"sources":["node_modules/ngx-infinite-scroll/modules/ngx-infinite-scroll.js","src/app/posts/posts.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, ElementRef, EventEmitter, Input, NgModule, NgZone, Output } from '@angular/core';\nimport { fromEvent, of } from 'rxjs';\nimport { filter, map, mergeMap, sampleTime, tap } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} selector\n * @param {?} scrollWindow\n * @param {?} defaultElement\n * @param {?} fromRoot\n * @return {?}\n */\nfunction resolveContainerElement(selector, scrollWindow, defaultElement, fromRoot) {\n    /** @type {?} */\n    const hasWindow = window && !!window.document && window.document.documentElement;\n    /** @type {?} */\n    let container = hasWindow && scrollWindow ? window : defaultElement;\n    if (selector) {\n        /** @type {?} */\n        const containerIsString = selector && hasWindow && typeof selector === 'string';\n        container = containerIsString\n            ? findElement(selector, defaultElement.nativeElement, fromRoot)\n            : selector;\n        if (!container) {\n            throw new Error('ngx-infinite-scroll {resolveContainerElement()}: selector for');\n        }\n    }\n    return container;\n}\n/**\n * @param {?} selector\n * @param {?} customRoot\n * @param {?} fromRoot\n * @return {?}\n */\nfunction findElement(selector, customRoot, fromRoot) {\n    /** @type {?} */\n    const rootEl = fromRoot ? window.document : customRoot;\n    return rootEl.querySelector(selector);\n}\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction inputPropChanged(prop) {\n    return prop && !prop.firstChange;\n}\n/**\n * @return {?}\n */\nfunction hasWindowDefined() {\n    return typeof window !== 'undefined';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst VerticalProps = {\n    clientHeight: \"clientHeight\",\n    offsetHeight: \"offsetHeight\",\n    scrollHeight: \"scrollHeight\",\n    pageYOffset: \"pageYOffset\",\n    offsetTop: \"offsetTop\",\n    scrollTop: \"scrollTop\",\n    top: \"top\"\n};\n/** @type {?} */\nconst HorizontalProps = {\n    clientHeight: \"clientWidth\",\n    offsetHeight: \"offsetWidth\",\n    scrollHeight: \"scrollWidth\",\n    pageYOffset: \"pageXOffset\",\n    offsetTop: \"offsetLeft\",\n    scrollTop: \"scrollLeft\",\n    top: \"left\"\n};\nclass AxisResolver {\n    /**\n     * @param {?=} vertical\n     */\n    constructor(vertical = true) {\n        this.vertical = vertical;\n        this.propsMap = vertical ? VerticalProps : HorizontalProps;\n    }\n    /**\n     * @return {?}\n     */\n    clientHeightKey() {\n        return this.propsMap.clientHeight;\n    }\n    /**\n     * @return {?}\n     */\n    offsetHeightKey() {\n        return this.propsMap.offsetHeight;\n    }\n    /**\n     * @return {?}\n     */\n    scrollHeightKey() {\n        return this.propsMap.scrollHeight;\n    }\n    /**\n     * @return {?}\n     */\n    pageYOffsetKey() {\n        return this.propsMap.pageYOffset;\n    }\n    /**\n     * @return {?}\n     */\n    offsetTopKey() {\n        return this.propsMap.offsetTop;\n    }\n    /**\n     * @return {?}\n     */\n    scrollTopKey() {\n        return this.propsMap.scrollTop;\n    }\n    /**\n     * @return {?}\n     */\n    topKey() {\n        return this.propsMap.top;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} alwaysCallback\n * @param {?} shouldFireScrollEvent\n * @param {?} isTriggeredCurrentTotal\n * @return {?}\n */\nfunction shouldTriggerEvents(alwaysCallback, shouldFireScrollEvent, isTriggeredCurrentTotal) {\n    if (alwaysCallback && shouldFireScrollEvent) {\n        return true;\n    }\n    if (!isTriggeredCurrentTotal && shouldFireScrollEvent) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction createResolver({ windowElement, axis }) {\n    return createResolverWithContainer({ axis, isWindow: isElementWindow(windowElement) }, windowElement);\n}\n/**\n * @param {?} resolver\n * @param {?} windowElement\n * @return {?}\n */\nfunction createResolverWithContainer(resolver, windowElement) {\n    /** @type {?} */\n    const container = resolver.isWindow || (windowElement && !windowElement.nativeElement)\n        ? windowElement\n        : windowElement.nativeElement;\n    return Object.assign({}, resolver, { container });\n}\n/**\n * @param {?} windowElement\n * @return {?}\n */\nfunction isElementWindow(windowElement) {\n    /** @type {?} */\n    const isWindow = ['Window', 'global'].some((obj) => Object.prototype.toString.call(windowElement).includes(obj));\n    return isWindow;\n}\n/**\n * @param {?} isContainerWindow\n * @param {?} windowElement\n * @return {?}\n */\nfunction getDocumentElement(isContainerWindow, windowElement) {\n    return isContainerWindow ? windowElement.document.documentElement : null;\n}\n/**\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nfunction calculatePoints(element, resolver) {\n    /** @type {?} */\n    const height = extractHeightForElement(resolver);\n    return resolver.isWindow\n        ? calculatePointsForWindow(height, element, resolver)\n        : calculatePointsForElement(height, element, resolver);\n}\n/**\n * @param {?} height\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nfunction calculatePointsForWindow(height, element, resolver) {\n    const { axis, container, isWindow } = resolver;\n    const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n    // scrolled until now / current y point\n    /** @type {?} */\n    const scrolled = height +\n        getElementPageYOffset(getDocumentElement(isWindow, container), axis, isWindow);\n    // total height / most bottom y point\n    /** @type {?} */\n    const nativeElementHeight = getElementHeight(element.nativeElement, isWindow, offsetHeightKey, clientHeightKey);\n    /** @type {?} */\n    const totalToScroll = getElementOffsetTop(element.nativeElement, axis, isWindow) +\n        nativeElementHeight;\n    return { height, scrolled, totalToScroll, isWindow };\n}\n/**\n * @param {?} height\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nfunction calculatePointsForElement(height, element, resolver) {\n    const { axis, container } = resolver;\n    // perhaps use container.offsetTop instead of 'scrollTop'\n    /** @type {?} */\n    const scrolled = container[axis.scrollTopKey()];\n    /** @type {?} */\n    const totalToScroll = container[axis.scrollHeightKey()];\n    return { height, scrolled, totalToScroll, isWindow: false };\n}\n/**\n * @param {?} axis\n * @return {?}\n */\nfunction extractHeightPropKeys(axis) {\n    return {\n        offsetHeightKey: axis.offsetHeightKey(),\n        clientHeightKey: axis.clientHeightKey()\n    };\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction extractHeightForElement({ container, isWindow, axis }) {\n    const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n    return getElementHeight(container, isWindow, offsetHeightKey, clientHeightKey);\n}\n/**\n * @param {?} elem\n * @param {?} isWindow\n * @param {?} offsetHeightKey\n * @param {?} clientHeightKey\n * @return {?}\n */\nfunction getElementHeight(elem, isWindow, offsetHeightKey, clientHeightKey) {\n    if (isNaN(elem[offsetHeightKey])) {\n        /** @type {?} */\n        const docElem = getDocumentElement(isWindow, elem);\n        return docElem ? docElem[clientHeightKey] : 0;\n    }\n    else {\n        return elem[offsetHeightKey];\n    }\n}\n/**\n * @param {?} elem\n * @param {?} axis\n * @param {?} isWindow\n * @return {?}\n */\nfunction getElementOffsetTop(elem, axis, isWindow) {\n    /** @type {?} */\n    const topKey = axis.topKey();\n    // elem = elem.nativeElement;\n    if (!elem.getBoundingClientRect) {\n        // || elem.css('none')) {\n        return;\n    }\n    return (elem.getBoundingClientRect()[topKey] +\n        getElementPageYOffset(elem, axis, isWindow));\n}\n/**\n * @param {?} elem\n * @param {?} axis\n * @param {?} isWindow\n * @return {?}\n */\nfunction getElementPageYOffset(elem, axis, isWindow) {\n    /** @type {?} */\n    const pageYOffset = axis.pageYOffsetKey();\n    /** @type {?} */\n    const scrollTop = axis.scrollTopKey();\n    /** @type {?} */\n    const offsetTop = axis.offsetTopKey();\n    if (isNaN(window[pageYOffset])) {\n        return getDocumentElement(isWindow, elem)[scrollTop];\n    }\n    else if (elem.ownerDocument) {\n        return elem.ownerDocument.defaultView[pageYOffset];\n    }\n    else {\n        return elem[offsetTop];\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} container\n * @param {?} distance\n * @param {?} scrollingDown\n * @return {?}\n */\nfunction shouldFireScrollEvent(container, distance, scrollingDown) {\n    /** @type {?} */\n    let remaining;\n    /** @type {?} */\n    let containerBreakpoint;\n    if (container.totalToScroll <= 0) {\n        return false;\n    }\n    /** @type {?} */\n    const scrolledUntilNow = container.isWindow ? container.scrolled : container.height + container.scrolled;\n    if (scrollingDown) {\n        remaining =\n            (container.totalToScroll - scrolledUntilNow) / container.totalToScroll;\n        containerBreakpoint = distance.down / 10;\n    }\n    else {\n        /** @type {?} */\n        const totalHiddenContentHeight = container.scrolled + (container.totalToScroll - scrolledUntilNow);\n        remaining = container.scrolled / totalHiddenContentHeight;\n        containerBreakpoint = distance.up / 10;\n    }\n    /** @type {?} */\n    const shouldFireEvent = remaining <= containerBreakpoint;\n    return shouldFireEvent;\n}\n/**\n * @param {?} lastScrollPosition\n * @param {?} container\n * @return {?}\n */\nfunction isScrollingDownwards(lastScrollPosition, container) {\n    return lastScrollPosition < container.scrolled;\n}\n/**\n * @param {?} lastScrollPosition\n * @param {?} container\n * @param {?} distance\n * @return {?}\n */\nfunction getScrollStats(lastScrollPosition, container, distance) {\n    /** @type {?} */\n    const scrollDown = isScrollingDownwards(lastScrollPosition, container);\n    return {\n        fire: shouldFireScrollEvent(container, distance, scrollDown),\n        scrollDown\n    };\n}\n/**\n * @param {?} position\n * @param {?} scrollState\n * @return {?}\n */\n\n/**\n * @param {?} totalToScroll\n * @param {?} scrollState\n * @return {?}\n */\n\n/**\n * @param {?} scrollState\n * @return {?}\n */\n\n/**\n * @param {?} scroll\n * @param {?} scrollState\n * @param {?} triggered\n * @param {?} isScrollingDown\n * @return {?}\n */\n\n/**\n * @param {?} totalToScroll\n * @param {?} scrollState\n * @param {?} isScrollingDown\n * @return {?}\n */\n\n/**\n * @param {?} scrollState\n * @param {?} scrolledUntilNow\n * @param {?} totalToScroll\n * @return {?}\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ScrollState {\n    /**\n     * @param {?} __0\n     */\n    constructor({ totalToScroll }) {\n        this.lastScrollPosition = 0;\n        this.lastTotalToScroll = 0;\n        this.totalToScroll = 0;\n        this.triggered = {\n            down: 0,\n            up: 0\n        };\n        this.totalToScroll = totalToScroll;\n    }\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    updateScrollPosition(position) {\n        return (this.lastScrollPosition = position);\n    }\n    /**\n     * @param {?} totalToScroll\n     * @return {?}\n     */\n    updateTotalToScroll(totalToScroll) {\n        if (this.lastTotalToScroll !== totalToScroll) {\n            this.lastTotalToScroll = this.totalToScroll;\n            this.totalToScroll = totalToScroll;\n        }\n    }\n    /**\n     * @param {?} scrolledUntilNow\n     * @param {?} totalToScroll\n     * @return {?}\n     */\n    updateScroll(scrolledUntilNow, totalToScroll) {\n        this.updateScrollPosition(scrolledUntilNow);\n        this.updateTotalToScroll(totalToScroll);\n    }\n    /**\n     * @param {?} scroll\n     * @param {?} isScrollingDown\n     * @return {?}\n     */\n    updateTriggeredFlag(scroll, isScrollingDown) {\n        if (isScrollingDown) {\n            this.triggered.down = scroll;\n        }\n        else {\n            this.triggered.up = scroll;\n        }\n    }\n    /**\n     * @param {?} totalToScroll\n     * @param {?} isScrollingDown\n     * @return {?}\n     */\n    isTriggeredScroll(totalToScroll, isScrollingDown) {\n        return isScrollingDown\n            ? this.triggered.down === totalToScroll\n            : this.triggered.up === totalToScroll;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} config\n * @return {?}\n */\nfunction createScroller(config) {\n    const { scrollContainer, scrollWindow, element, fromRoot } = config;\n    /** @type {?} */\n    const resolver = createResolver({\n        axis: new AxisResolver(!config.horizontal),\n        windowElement: resolveContainerElement(scrollContainer, scrollWindow, element, fromRoot)\n    });\n    /** @type {?} */\n    const scrollState = new ScrollState({\n        totalToScroll: calculatePoints(element, resolver)\n    });\n    /** @type {?} */\n    const options = {\n        container: resolver.container,\n        throttle: config.throttle\n    };\n    /** @type {?} */\n    const distance = {\n        up: config.upDistance,\n        down: config.downDistance\n    };\n    return attachScrollEvent(options).pipe(mergeMap(() => of(calculatePoints(element, resolver))), map((positionStats) => toInfiniteScrollParams(scrollState.lastScrollPosition, positionStats, distance)), tap(({ stats }) => scrollState.updateScroll(stats.scrolled, stats.totalToScroll)), filter(({ fire, scrollDown, stats: { totalToScroll } }) => shouldTriggerEvents(config.alwaysCallback, fire, scrollState.isTriggeredScroll(totalToScroll, scrollDown))), tap(({ scrollDown, stats: { totalToScroll } }) => {\n        scrollState.updateTriggeredFlag(totalToScroll, scrollDown);\n    }), map(toInfiniteScrollAction));\n}\n/**\n * @param {?} options\n * @return {?}\n */\nfunction attachScrollEvent(options) {\n    /** @type {?} */\n    let obs = fromEvent(options.container, 'scroll');\n    // For an unknown reason calling `sampleTime()` causes trouble for many users, even with `options.throttle = 0`.\n    // Let's avoid calling the function unless needed.\n    // See https://github.com/orizens/ngx-infinite-scroll/issues/198\n    if (options.throttle) {\n        obs = obs.pipe(sampleTime(options.throttle));\n    }\n    return obs;\n}\n/**\n * @param {?} lastScrollPosition\n * @param {?} stats\n * @param {?} distance\n * @return {?}\n */\nfunction toInfiniteScrollParams(lastScrollPosition, stats, distance) {\n    const { scrollDown, fire } = getScrollStats(lastScrollPosition, stats, distance);\n    return {\n        scrollDown,\n        fire,\n        stats\n    };\n}\n/** @type {?} */\nconst InfiniteScrollActions = {\n    DOWN: '[NGX_ISE] DOWN',\n    UP: '[NGX_ISE] UP'\n};\n/**\n * @param {?} response\n * @return {?}\n */\nfunction toInfiniteScrollAction(response) {\n    const { scrollDown, stats: { scrolled: currentScrollPosition } } = response;\n    return {\n        type: scrollDown ? InfiniteScrollActions.DOWN : InfiniteScrollActions.UP,\n        payload: {\n            currentScrollPosition\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass InfiniteScrollDirective {\n    /**\n     * @param {?} element\n     * @param {?} zone\n     */\n    constructor(element, zone) {\n        this.element = element;\n        this.zone = zone;\n        this.scrolled = new EventEmitter();\n        this.scrolledUp = new EventEmitter();\n        this.infiniteScrollDistance = 2;\n        this.infiniteScrollUpDistance = 1.5;\n        this.infiniteScrollThrottle = 150;\n        this.infiniteScrollDisabled = false;\n        this.infiniteScrollContainer = null;\n        this.scrollWindow = true;\n        this.immediateCheck = false;\n        this.horizontal = false;\n        this.alwaysCallback = false;\n        this.fromRoot = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!this.infiniteScrollDisabled) {\n            this.setup();\n        }\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    ngOnChanges({ infiniteScrollContainer, infiniteScrollDisabled, infiniteScrollDistance }) {\n        /** @type {?} */\n        const containerChanged = inputPropChanged(infiniteScrollContainer);\n        /** @type {?} */\n        const disabledChanged = inputPropChanged(infiniteScrollDisabled);\n        /** @type {?} */\n        const distanceChanged = inputPropChanged(infiniteScrollDistance);\n        /** @type {?} */\n        const shouldSetup = (!disabledChanged && !this.infiniteScrollDisabled) ||\n            (disabledChanged && !infiniteScrollDisabled.currentValue) || distanceChanged;\n        if (containerChanged || disabledChanged || distanceChanged) {\n            this.destroyScroller();\n            if (shouldSetup) {\n                this.setup();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    setup() {\n        if (hasWindowDefined()) {\n            this.zone.runOutsideAngular(() => {\n                this.disposeScroller = createScroller({\n                    fromRoot: this.fromRoot,\n                    alwaysCallback: this.alwaysCallback,\n                    disable: this.infiniteScrollDisabled,\n                    downDistance: this.infiniteScrollDistance,\n                    element: this.element,\n                    horizontal: this.horizontal,\n                    scrollContainer: this.infiniteScrollContainer,\n                    scrollWindow: this.scrollWindow,\n                    throttle: this.infiniteScrollThrottle,\n                    upDistance: this.infiniteScrollUpDistance\n                }).subscribe((payload) => this.zone.run(() => this.handleOnScroll(payload)));\n            });\n        }\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    handleOnScroll({ type, payload }) {\n        switch (type) {\n            case InfiniteScrollActions.DOWN:\n                return this.scrolled.emit(payload);\n            case InfiniteScrollActions.UP:\n                return this.scrolledUp.emit(payload);\n            default:\n                return;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyScroller();\n    }\n    /**\n     * @return {?}\n     */\n    destroyScroller() {\n        if (this.disposeScroller) {\n            this.disposeScroller.unsubscribe();\n        }\n    }\n}\nInfiniteScrollDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[infiniteScroll], [infinite-scroll], [data-infinite-scroll]'\n            },] },\n];\n/** @nocollapse */\nInfiniteScrollDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nInfiniteScrollDirective.propDecorators = {\n    scrolled: [{ type: Output }],\n    scrolledUp: [{ type: Output }],\n    infiniteScrollDistance: [{ type: Input }],\n    infiniteScrollUpDistance: [{ type: Input }],\n    infiniteScrollThrottle: [{ type: Input }],\n    infiniteScrollDisabled: [{ type: Input }],\n    infiniteScrollContainer: [{ type: Input }],\n    scrollWindow: [{ type: Input }],\n    immediateCheck: [{ type: Input }],\n    horizontal: [{ type: Input }],\n    alwaysCallback: [{ type: Input }],\n    fromRoot: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass InfiniteScrollModule {\n}\nInfiniteScrollModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [InfiniteScrollDirective],\n                exports: [InfiniteScrollDirective],\n                imports: [],\n                providers: []\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Angular library starter.\n * Build an Angular library compatible with AoT compilation & Tree shaking.\n * Written by Roberto Simonetti.\n * MIT license.\n * https://github.com/robisim74/angular-library-starter\n */\n/**\n * Entry point for all public APIs of the package.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InfiniteScrollDirective, InfiniteScrollModule };\n//# sourceMappingURL=ngx-infinite-scroll.js.map\n","import { NgModule } from '@angular/core';\r\nimport { PostsComponent } from './posts.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { PostsDetailComponent } from './posts-detail/posts-detail.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { PostsServiceModule } from './posts-service/posts-service.module';\r\nimport { UsersServiceModule } from '../users/users-service/users-service.module';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PostsComponent },\r\n  { path: 'posts/:postId', component: PostsDetailComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [PostsComponent, PostsDetailComponent],\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild(routes),\r\n    InfiniteScrollModule,\r\n    PostsServiceModule,\r\n    UsersServiceModule\r\n  ],\r\n  providers: []\r\n})\r\nexport class PostsModule { }"],"sourceRoot":"webpack:///","file":"posts-posts-module-es5.js"}